[package]
name = "world"
version = "0.1.0"
authors = ["Tyler Tracy <tylertracy1999@gmail.com>"]
edition = "2018"
description = "Logic for a world"
repository = "https://www.github.com"
license = "GPL2"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2.92", features = ["serde-serialize"] }
lazy_static = "1.4.0"
num = "0.4"
js-sys = "0.3.59"
serde = { version = "1.0", features = ["derive"] }
serde_repr = "0.1"
serde-big-array = "0.4.1"
serde-wasm-bindgen = "0.6.5"
float-cmp = "0.9.0"
phf = { version = "0.11", default-features = false, features = ["macros"] }
web-sys = { version = "0.3.60", features = ["console"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
watch = "0.2.3"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
# Add debug symbols to the release build.
debug = true

