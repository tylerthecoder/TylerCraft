import { Game } from "../game";
import { GameAction } from "../gameActions";
import { GameStateDiff } from "../gameStateDiff";


export abstract class AbstractScript {

	constructor(
		public game: Game,
	) { }

	/** Called after the game loads */
	abstract init(): Promise<void>;

	/** Will be passed client actions. These are generated by a controller somewhere. Modify state based on client events */
	abstract update(delta: number, stateDiff: GameStateDiff): void;

	/** This should not try to apply the actions to the game state
	 * only redirect the actions (i.e to a socket)
	 */
	abstract onAction(action: GameAction): void;

}